/*
 * Copyright (c) 2024.  little3201.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *       https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

package com.server.starter.exploiter.mapper;

import com.server.starter.exploiter.domain.ColumnInfo;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Select;

import java.util.List;

/**
 * column mapper.
 *
 * @author wq li
 */
@Mapper
public interface ColumnMapper {

    @Select("SELECT \n" +
            "    a.attname AS column_name,\n" +
            "    CASE WHEN t.typname = 'bpchar' THEN 'char' ELSE t.typname END AS data_type,\n" +
            "    CASE\n" +
            "        WHEN t.typname IN ('varchar', 'bpchar') THEN a.atttypmod - 4\n" +
            "        WHEN a.attlen = -1 then NULL\n" +
            "        ELSE a.attlen\n" +
            "    END AS maximum_length,\n" +
            "    NOT a.attnotnull AS is_nullable,\n" +
            "    pg_get_expr(d.adbin, d.adrelid) AS column_default,\n" +
            "    col_description(a.attrelid, a.attnum) AS column_comment,\n" +
            "    CASE WHEN i.indisunique IS TRUE THEN true ELSE false END AS is_unique\n" +
            "FROM pg_attribute a\n" +
            "JOIN pg_class c ON a.attrelid = c.oid\n" +
            "LEFT JOIN pg_attrdef d ON a.attrelid = d.adrelid AND a.attnum = d.adnum\n" +
            "JOIN pg_namespace n ON c.relnamespace = n.oid\n" +
            "JOIN pg_type t ON a.atttypid = t.oid\n" +
            "LEFT JOIN pg_index i ON c.oid = i.indrelid AND a.attnum = ANY(i.indkey) AND i.indisunique = TRUE\n" +
            "WHERE c.relname = #{tableName}  AND n.nspname = 'public' AND a.attnum > 0 AND NOT a.attisdropped\n" +
            "ORDER BY a.attnum;")
    List<ColumnInfo> findAllColumnsByName(String tableName);
}
