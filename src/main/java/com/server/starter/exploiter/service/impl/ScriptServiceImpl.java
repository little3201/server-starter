package com.server.starter.exploiter.service.impl;

import com.server.starter.convert.Converter;
import com.server.starter.exploiter.domain.Script;
import com.server.starter.exploiter.repository.ScriptRepository;
import com.server.starter.exploiter.service.ScriptService;
import com.server.starter.exploiter.vo.ScriptVO;
import org.springframework.stereotype.Service;
import org.springframework.util.StringUtils;

import java.util.List;

@Service
public class ScriptServiceImpl implements ScriptService {

    private final ScriptRepository scriptRepository;

    public ScriptServiceImpl(ScriptRepository scriptRepository) {
        this.scriptRepository = scriptRepository;
    }

    @Override
    public List<ScriptVO> retrieve(String name) {
        if (StringUtils.hasText(name)) {
            return scriptRepository.findAllByNameContaining(name).stream().map(this::convert).toList();
        }
        return scriptRepository.findAll().stream().map(this::convert).toList();
    }

    /**
     * 类型转换
     *
     * @param script 信息
     * @return VO 输出对象
     */
    private ScriptVO convert(Script script) {
        ScriptVO vo = Converter.convert(script, ScriptVO.class);
        vo.setLastModifiedDate(script.getLastModifiedDate().orElse(null));
        return vo;
    }
}
