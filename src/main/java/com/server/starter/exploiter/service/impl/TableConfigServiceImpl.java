package com.server.starter.exploiter.service.impl;

import com.server.starter.exploiter.domain.TableConfig;
import com.server.starter.exploiter.repository.TableConfigRepository;
import com.server.starter.exploiter.service.TableConfigService;
import com.server.starter.exploiter.vo.TableConfigVO;
import org.springframework.cglib.beans.BeanCopier;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Sort;
import org.springframework.stereotype.Service;
import org.springframework.util.StringUtils;

@Service
public class TableConfigServiceImpl implements TableConfigService {

    private final TableConfigRepository tableConfigRepository;

    public TableConfigServiceImpl(TableConfigRepository tableConfigRepository) {
        this.tableConfigRepository = tableConfigRepository;
    }

    @Override
    public Page<TableConfigVO> retrieve(int page, int size, String sortBy, boolean descending, String name) {
        Sort sort = Sort.by(descending ? Sort.Direction.DESC : Sort.Direction.ASC,
                StringUtils.hasText(sortBy) ? sortBy : "id");
        Pageable pageable = PageRequest.of(page, size, sort);

        return tableConfigRepository.findAll(pageable).map(this::convert);
    }


    /**
     * 类型转换
     *
     * @param tableConfig 信息
     * @return DictionaryVO 输出对象
     */
    private TableConfigVO convert(TableConfig tableConfig) {
        TableConfigVO vo = new TableConfigVO();
        BeanCopier copier = BeanCopier.create(TableConfig.class, TableConfigVO.class, false);
        copier.copy(tableConfig, vo, null);
        return vo;
    }
}
